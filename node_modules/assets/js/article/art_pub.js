$(function () { 
    var layer = layui.layer
    var form=layui.form
    initCate()
    // 初始化富文本编辑器
    initEditor()
    // 裁剪区域
    var $image=$('#image')
    // 2 配置选项
    const options = {
        // 纵横比
        aspectRatio: 1,
        // 指定预览区域
        preview:'.img-preview'
    }
    // 3 创建裁剪区域
    $image.cropper(options)
    // 定义一个请求文章分类的下拉框
    function initCate() { 
        $.ajax({
            url: '/my/article/cates',
            method: 'GET',
            success: function (res) { 
                if (res.status !== 0) { 
                    return layer.msg('初始化文章分类失败')
                }
                // 调用模板引擎，渲染分类的下拉菜单
                var htmlStr=template('tpl-cate',res)
                $('[name=cate_id]').html(htmlStr)
                // 一定要记得调用form.render()方法
                form.render()
            }
        })
    }
    function initEditor() { 
        // tinymce.init({
        //     selector: 'textarea.content', //表单控件.样式名称 - 绑定textarea
        //     language:'zh_CN',
        //     height:"200", //高度
        //     width:"450", //宽度
        //     toolbar_items_size: 'small', //控件大小
        //     menubar:true, //是否显示菜单栏
        //     plugins: ["link code"], //插件区，激活控件
        //     toolbar: "link code",  //控件区，显示控件
        //     //名称前后显示，影响控件显示位置
        // });
        tinymce.init({
            selector: 'textarea.content', //容器，可使用css选择器
            language:'zh_CN', //调用放在langs文件夹内的语言包
            toolbar: true, //隐藏工具栏
            menubar: true, //隐藏菜单栏
            // inline: true, //开启内联模式
            plugins: [ 'quickbars','link','table' ], //选择需加载的插件
            //选中时出现的快捷工具，与插件有依赖关系
            toolbar: "link code",  //控件区，显示控件
            quickbars_selection_toolbar: 'bold italic forecolor | link blockquote quickimage',
        });
    }
    // 为选择封面的按钮，绑定点击事件处理函数
    $('#btnChooseImage').on('click', function () { 
        $('#coverfile').click()
    })
    $('#coverfile').on('change', function (e) { 
        // 获取到文件的列表数组
        var files=e.target.files
        // 判断用户是否选择了文件
        if (files.length == 0) { 
            return 
        }
        // 根据文件，创建对应的URL地址
        var newImgURL=URL.createObjectURL(files[0])
        // 为裁剪区域重新设置图片
        $image
            .cropper('destroy') //销毁旧的裁剪区域
            .attr('src', newImgURL) //重新设置图片路径
            .cropper(options) //重新初始化裁剪区域
    })
    // 定义发布文章的状态
    var art_state = '已发布'
    // 为存为草稿按钮，绑定点击事件处理函数
    $('#btnSave2').on('click', function () { 
        art_state='草稿'
    })
    $('#form-pub').on('submit', function (e) { 
        // 1 阻止表单的默认提交行为
        e.preventDefault()
        // 2 基于form表单，快速创建一个FormData对象
        var fd=new FormData($(this)[0])
        // 3 将文章的发布状态，存到fd中
        fd.append('state', art_state)
        // 4 将封面裁剪过后的图片，输出为一个文件对象
        $image.cropper('getCroppedCanvas', { //创建一个canvas画布
            width: 400,
            height:280 
        }).toBlob(function (blob) {  //将Canvas画布上的内容，转化为文件对象
            // 得到文件对象后，进行后续操作
            // 5 将文件对象，存储到fd中
            fd.append('cover_img', blob)
            // 6 发起ajax请求
            publishArticle(fd)
        })
        
    })
    // 定义一个发表文章的方法
    function publishArticle(fd) { 
        $.ajax({
            url: '/my/article/add',
            method: 'POST',
            data: fd,
            // 注意：如果向服务器提交的是FormData格式的数据，
            // 必须加下面两个配置项
            contentType: false,
            processDate: false,
            success: function (res) { 
                if (res.status !== 0) { 
                    return layer.msg('发布文章失败')
                }
                layer.msg('发布文章成功')
                // 发布文章成功后，跳转到文章列表页面
                location.href='/article/art_list.html'
            }
        })
    }
})